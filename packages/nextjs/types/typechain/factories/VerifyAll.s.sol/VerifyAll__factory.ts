/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VerifyAll,
  VerifyAllInterface,
} from "../../VerifyAll.s.sol/VerifyAll";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "uint96",
        name: "idx",
        type: "uint96",
      },
    ],
    name: "getTransactionFromRaw",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "nextTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610027576201000162ff00ff19600b541617600b55611456908161002d8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816353dcc2781461005a57508063b604ffb114610055578063c0406226146100505763f8ccbf471461004b57600080fd5b610469565b61027f565b61022f565b3461014f57604036600319011261014f5760043567ffffffffffffffff811161014b5761008b9036906004016101e3565b81602435916001600160601b038316830361014b576100ca6100e693604051906100b482610189565b60048252630d0c2e6d60e31b6020830152611357565b6040516385940ef160e01b8152938492839290600484016106a1565b0381737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa801561014657610120918391610124575b5060208082518301019101611348565b5080f35b61014091503d8085833e61013881836101a5565b81019061067b565b83610110565b610523565b5080fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761018457604052565b610152565b6040810190811067ffffffffffffffff82111761018457604052565b90601f8019910116810190811067ffffffffffffffff82111761018457604052565b67ffffffffffffffff811161018457601f01601f191660200190565b81601f8201121561022a578035906101fa826101c7565b9261020860405194856101a5565b8284526020838301011161022a57816000926020809301838601378301015290565b600080fd5b3461022a57602036600319011261022a5760043567ffffffffffffffff811161022a5761026a61026560209236906004016101e3565b6111a0565b6040519015158152f35b600091031261022a57565b3461022a5760008060031936011261014f5760408051636c98507360e11b8152600491737109709ecfa91a80626ff3989d68f67f5b1dd12d9184818581865afa90811561014657859161044f575b5081519263348051d760e11b84528584806102ef468983019190602083019252565b0381845afa9384156101465761032c948793610312928592610433575b5061052f565b90835180809681946360f9bb1160e01b83528983016105da565b03915afa91821561014657849261040f575b5090915b815163b604ffb160e01b8152602090818180610360888783016105da565b0381305afa9182156101465786926103e2575b5050156103de578291610385836106e8565b6103d76103a66103a1600b546001600160601b039060181c1690565b610619565b6effffffffffffffffffffffff000000600b549160181b16906effffffffffffffffffffffff000000191617600b55565b9150610342565b8380f35b6104019250803d10610408575b6103f981836101a5565b8101906105eb565b3880610373565b503d6103ef565b61042c9192503d8086833e61042481836101a5565b8101906104e9565b903861033e565b6104489192503d8087833e61042481836101a5565b903861030c565b61046391503d8087833e61042481836101a5565b386102cd565b3461022a57600036600319011261022a57602060ff600b5460101c166040519015158152f35b60005b8381106104a25750506000910152565b8181015183820152602001610492565b909291926104bf816101c7565b916104cd60405193846101a5565b82948284528282011161022a5760206104e793019061048f565b565b60208183031261022a5780519067ffffffffffffffff821161022a57019080601f8301121561022a578151610520926020016104b2565b90565b6040513d6000823e3d90fd5b60486104e791939293604051948161055187935180926020808701910161048f565b82017f2f62726f6164636173742f4465706c6f792e732e736f6c2f0000000000000000602082015261058d82518093602060388501910161048f565b016f17b93ab716b630ba32b9ba173539b7b760811b60388201520360288101855201836101a5565b906020916105ce8151809281855285808601910161048f565b601f01601f1916010190565b9060206105209281815201906105b5565b9081602091031261022a5751801515810361022a5790565b634e487b7160e01b600052601160045260246000fd5b6001600160601b038091169081146106315760010190565b610603565b6040519061064382610189565b600f82526e7472616e73616374696f6e5479706560881b6020830152565b9080601f8301121561022a578151610520926020016104b2565b9060208282031261022a57815167ffffffffffffffff811161022a576105209201610661565b90916106b8610520936040845260408401906105b5565b9160208184039101526105b5565b604051906106d382610189565b600682526543524541544560d01b6020830152565b610728600061070d6001600160601b03600b5460181c16610707610636565b90611357565b604051809381926385940ef160e01b835286600484016106a1565b0381737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa8015610146576107639160009161078a575b50602080825183010191016104e9565b602081519101206107726106c6565b60208151910120146107815750565b6104e790610b79565b61079d913d8091833e61013881836101a5565b38610753565b604051906107b082610189565b600c82526b636f6e74726163744e616d6560a01b6020830152565b604051906107d882610189565b600f82526e636f6e74726163744164647265737360881b6020830152565b9081602091031261022a57516001600160a01b038116810361022a5790565b6040519061082282610189565b601082526f7472616e73616374696f6e2e6461746160801b6020830152565b610853604092838352838301906105b5565b906020818303910152601081526f0b989e5d1958dbd9194b9bd89a9958dd60821b60208201520190565b9190820391821161063157565b60405190610140820182811067ffffffffffffffff82111761018457604052600982528160005b61012081106108be575050565b8060606020809385010152016108b1565b8051156108dc5760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156108dc5760400190565b8051600210156108dc5760600190565b8051600310156108dc5760800190565b8051600410156108dc5760a00190565b8051600510156108dc5760c00190565b8051600610156108dc5760e00190565b8051600710156108dc576101000190565b8051600810156108dc576101200190565b6040519061098182610189565b6005825264666f72676560d81b6020830152565b604051906109a282610189565b600f82526e1d995c9a599e4b58dbdb9d1c9858dd608a1b6020830152565b604051906109cd82610189565b60078252661696b1b430b4b760c91b6020830152565b604051906109f082610189565b60128252712d2d636f6e7374727563746f722d6172677360701b6020830152565b60405190610a1e82610189565b600782526605a5aeec2e8c6d60cb1b6020830152565b9060208282031261022a57815167ffffffffffffffff9283821161022a57019060608282031261022a5760405192610a6b84610168565b82518060030b810361022a578452602083015181811161022a5782610a91918501610661565b6020850152604083015190811161022a57610aac9201610661565b604082015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610ae85750505050505090565b9091929394958480610b06600193603f198682030187528a516105b5565b9801930193019194939290610ad8565b906104e7604660405180947f5375626d697474696e6720766572696669636174696f6e20666f7220636f6e7460208301526503930b1ba1d160d51b6040830152610b69815180926020868601910161048f565b81010360268101855201836101a5565b600b5460181c6001600160601b0316610b99610b936107a3565b82611357565b906040928351926385940ef160e01b9182855260009585610bbf600494848684016106a1565b03938787737109709ecfa91a80626ff3989d68f67f5b1dd12d9681885afa96871561014657889761100d575b50610c2a90610c05885198602080809b83010191016104e9565b9389610c18610c126107cb565b8a611357565b855180958192868352858b84016106a1565b03818a5afa90811561014657610c70610c67610c5b8d94610c83978691610ff3575b508d80825183010191016107f6565b6001600160a01b031690565b99610707610815565b90855194859283928684528a84016106a1565b0381895afa801561014657610cad8a91610cc9948391610fd9575b508a808251830101910161067b565b91610cb786611224565b90855194859283928352898301610841565b0381895afa91821561014657610d0592610cf3918b91610fbf575b5089808251830101910161067b565b51610cff81835161087d565b91611114565b95610d0e61088a565b96610d17610974565b610d20896108cf565b52610d2a886108cf565b50610d33610995565b610d3c896108f2565b52610d46886108f2565b508251632b65311f60e11b8082526001600160a01b038916878301908152909591908b908290819060200103818b5afa908115610146578b91610fa5575b50610d8e8a610902565b52610d9889610902565b50610da289610912565b52610dac88610912565b50610db56109c0565b610dbe89610922565b52610dc888610922565b50825163348051d760e11b8152468682019081528a908290819060200103818a5afa91821561014657610e47928b928391610f8b575b50610e088b610932565b52610e128a610932565b50610e1b6109e3565b610e248b610942565b52610e2e8a610942565b508451809381926371aad10d60e01b83528983016105da565b0381895afa97881561014657610ea9988a928391610f71575b50610e6a82610952565b52610e7481610952565b50610e7d610a11565b610e8682610963565b52610e9081610963565b5083518099819263f45c1ce760e01b8352888301610ab4565b038183895af1968715610146578897610f4d575b5086820180515190979015610f39575050519081526001600160a01b03909316908301908152849183918290819060200103915afa928315610146576104e793610f189282610f139392610f1e575b5050610b16565b61102d565b5161102d565b610f3292503d8091833e61042481836101a5565b3880610f0c565b95509550505050506104e79250015161102d565b610f6a9197503d808a833e610f6281836101a5565b810190610a34565b9538610ebd565b610f8591503d8085833e61042481836101a5565b38610e60565b610f9f91503d8085833e61042481836101a5565b38610dfe565b610fb991503d808d833e61042481836101a5565b38610d84565b610fd391503d808d833e61013881836101a5565b38610ce4565b610fed91503d8085833e61013881836101a5565b38610c9e565b61100791503d8088833e61013881836101a5565b38610c4c565b610c2a919750611026903d808b833e61013881836101a5565b9690610beb565b600080916040516110698161105b602082019463104c13eb60e21b86526020602484015260448301906105b5565b03601f1981018352826101a5565b51906a636f6e736f6c652e6c6f675afa50565b90601f820180921161063157565b9190820180921161063157565b1561109e57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b156110db57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b91611129816111228161107c565b1015611097565b61113f8351611138838561108a565b11156110d4565b8061115857505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b80841061118d5750508252601f01601f191660405290565b9092835181526020809101930190611175565b6001600160601b03600b5460181c1690303b1561022a576111e06000916040519384928392630a7b984f60e31b84526040600485015260448401906105b5565b9060248301520381305afa9081611201575b506111fc57600090565b600190565b67ffffffffffffffff8111610184578061121e9160405280610274565b386111f2565b604051636c98507360e11b8152600091737109709ecfa91a80626ff3989d68f67f5b1dd12d91908382600481865afa928315610146576112e9602f611304958795869161132e575b50604051948161128687935180926020808701910161048f565b820190642f6f75742f60d81b60208301526112cc815160208301936112af82602583018761048f565b0191642e736f6c2f60d81b6025840152518093602a84019061048f565b0164173539b7b760d91b602a82015203600f8101855201836101a5565b60405180809581946360f9bb1160e01b8352600483016105da565b03915afa91821561014657809261131a57505090565b61052092503d8091833e61042481836101a5565b61134291503d8088833e61042481836101a5565b3861126c565b9081602091031261022a575190565b6001600160601b036040519163348051d760e11b8352166004820152600081602481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa9081156101465761052091603091600091611407575b506040519384916d2e7472616e73616374696f6e735b60901b60208401526113d8815180926020602e8701910161048f565b8201612e9760f11b602e8201526113f8825180936020878501910161048f565b010360108101845201826101a5565b61141a913d8091833e61042481836101a5565b386113a656fea26469706673582212201c4c5a93ab0faaff3cbe67faa1a87d05f9073787f59d44523c6f203688343fde64736f6c63430008150033";

type VerifyAllConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyAllConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyAll__factory extends ContractFactory {
  constructor(...args: VerifyAllConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifyAll & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyAll__factory {
    return super.connect(runner) as VerifyAll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyAllInterface {
    return new Interface(_abi) as VerifyAllInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VerifyAll {
    return new Contract(address, _abi, runner) as unknown as VerifyAll;
  }
}
