/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "greetingSetter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newGreeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "premium",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "GreetingChange",
    type: "event",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newGreeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userGreetingCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a03461011057601f61086a38819003918201601f19168301916001600160401b038311848410176101155780849260209460405283398101031261011057516001600160a01b038116810361011057600080546001908181811c91168015610106575b60208210146100f257601f81116100c6575b507f4275696c64696e6720556e73746f707061626c652041707073212121000000388255805460ff1916905560025560805260405161073e908161012c82396080518181816104cc01526105110152f35b82805281601f60208520920160051c8201915b8281106100e7575050610075565b8481550182906100d9565b634e487b7160e01b83526022600452602483fd5b90607f1690610063565b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049081361015610023575b505050361561002157600080fd5b005b600091823560e01c9182633ccfd60b146104fb575081638da5cb5b146104b757816397feba9d14610498578163a4136862146101d3578163cea49c3c1461019457508063e0a73a931461016c5763ef690cc0146100805780610013565b34610169578060031936011261016957815191828283546100a08161063f565b908184526020956001918783821691826000146101425750506001146100e7575b5050506100e392916100d49103856105eb565b51928284938452830190610679565b0390f35b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061012a57505050820101816100d46100e36100c1565b8054848a018601528895508794909301928101610111565b60ff19168782015293151560051b860190930193508492506100d491506100e390506100c1565b80fd5b50903461019057816003193601126101905760209060ff6001541690519015158152f35b5080fd5b839150346101cf5760203660031901126101cf57356001600160a01b038116908190036101cf57828291602094526003845220549051908152f35b8280fd5b60209150833660031901831361049457813567ffffffffffffffff9283821161049057366023830112156104905781810135938660249361021387610623565b96610220875198896105eb565b808852368682840101116101cf5780868a9301838a01378701015283518481018181108382111761047e578552601481527353657474696e67206e6577206772656574696e6760601b87820152610276906106b9565b61027f856106b9565b845190811161046c57610292875461063f565b601f811161040b575b508086601f821160011461038c578891610381575b508160011b916000199060031b1c19161786555b6002549160019283810180911161036f57600255338752600386528387209081549284840180941161035e575050557f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad9291859134158015919061035157805460ff1916811790555b610341825194606086526060860190610679565b958401528201528033930390a280f35b805460ff1916905561032d565b634e487b7160e01b89526011905287fd5b50634e487b7160e01b87526011825286fd5b9050850151886102b0565b8880527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639150601f198316895b898282106103f557505090836001949392106103dc575b5050811b0186556102c4565b87015160001960f88460031b161c1916905588806103d0565b600184958293958c0151815501940192016103b9565b8780527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c810191888410610462575b601f0160051c01905b818110610457575061029b565b88815560010161044a565b9091508190610441565b50634e487b7160e01b86526041905284fd5b634e487b7160e01b8952604184528489fd5b8580fd5b8380fd5b8284346101905781600319360112610190576020906002549051908152f35b828434610190578160031936011261019057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b84919250346104945783600319360112610494577f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03821633036105ba5750838080809347905af13d156105b5573d61055b81610623565b90610568845192836105eb565b81528460203d92013e5b1561057b578280f35b906020606492519162461bcd60e51b835282015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152fd5b610572565b62461bcd60e51b8152602084820152600d60248201526c2737ba103a34329027bbb732b960991b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761060d57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161060d57601f01601f191660200190565b90600182811c9216801561066f575b602083101461065957565b634e487b7160e01b600052602260045260246000fd5b91607f169161064e565b919082519283825260005b8481106106a5575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610684565b600080916040516106f5816106e7602082019463104c13eb60e21b8652602060248401526044830190610679565b03601f1981018352826105eb565b51906a636f6e736f6c652e6c6f675afa5056fea2646970667358221220bf2dc7cb76c39f1fbbd9f4d15a73307a1f1482da44e33f5e3480c4cd4fe5cc0464736f6c63430008150033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      YourContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YourContract__factory {
    return super.connect(runner) as YourContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YourContract {
    return new Contract(address, _abi, runner) as unknown as YourContract;
  }
}
